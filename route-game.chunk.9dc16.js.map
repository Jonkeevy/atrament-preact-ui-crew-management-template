{"version":3,"sources":["webpack:///./components/settings/settings-sound/index.css","webpack:///./components/ui/toggle/index.css","webpack:///./components/ui/toggle/index.js","webpack:///./components/settings/settings-sound/index.js","webpack:///./components/ui/block/index.css","webpack:///./components/ui/block/index.js","webpack:///../node_modules/@nanostores/preact/index.js","webpack:///../node_modules/nanostores/listen-keys/index.js","webpack:///./atrament/hooks.js","webpack:///./components/ui/container-text/index.css","webpack:///./components/ui/container-text/index.js","webpack:///./components/ui/container-choices/index.css","webpack:///./components/ui/choice-button/index.css","webpack:///./components/ui/choice-button/index.js","webpack:///./components/ui/link-home/index.css","webpack:///./components/ui/link-home/index.js","webpack:///./components/ui/container-choices/index.js","webpack:///./components/ui/container-scenes/index.css","webpack:///./components/ui/scene/index.css","webpack:///./components/ui/container-image/index.css","webpack:///./components/ui/container-image/index.js","webpack:///./components/ui/scene-paragraph/index.js","webpack:///./components/ui/scene/index.js","webpack:///./utils/preload-images.js","webpack:///./components/ui/container-scenes/index.js","webpack:///./components/routes/game.js","webpack:///./components/settings/settings-text/index.js","webpack:///./components/settings/index.css","webpack:///./components/ui/backdrop/index.css","webpack:///./components/ui/backdrop/index.js","webpack:///./components/ui/modal/index.css","webpack:///./components/ui/modal/index.js","webpack:///./components/ui/close-button/index.css","webpack:///./components/ui/close-button/index.js","webpack:///./components/settings/settings-text/index.css","webpack:///./components/settings/settings-font/index.css","webpack:///./components/settings/settings-font/index.js","webpack:///./components/settings/settings-theme/index.css","webpack:///./components/settings/settings-theme/index.js","webpack:///./components/settings/settings-animation/index.js","webpack:///./components/settings/settings-version/index.css","webpack:///./components/settings/settings-version/index.js","webpack:///./components/settings/index.js"],"names":["Toggle","_ref","enabled","onChange","h","class","style","type","checked","SettingsSound","_useAtrament","useAtrament","updateSettings","_state$settings","state","settings","mute","volume","Fragment","settings_sound","join","e","target","settings_sound_container","settings_sound_icon","settings_sound_input_container","settings_sound_volume","disabled","min","max","value","Block","children","align","cssStyles","push","useStore","store","opts","arguments","length","undefined","forceRender","_slicedToArray","useState","valueBeforeEffect","get","useEffect","batching","timer","unlisten","rerender","setTimeout","keys","listener","keysSet","Set","concat","_toConsumableArray","listen","changed","has","listenKeys","clearTimeout","atrament","useContext","Atrament","canResume","game","gameStart","start","gameResume","resume","makeChoice","continueStory","name","set","save","ContainerText","fontSize","container_text","ChoiceButton","choice","handleClick","onClick","useCallback","id","dangerouslySetInnerHTML","__html","LinkHome","key","removeSave","route","apply","ContainerChoices","currentScene","readyHandler","isReady","selectChoice","choices","uuid","container_choices","opacity","map","index","ContainerImage","src","imagebox","image","Paragraph","pStyle","content","isCurrent","Scene","scene","_useState2","isLoaded","setIsLoaded","elementRef","useRef","current","scrollIntoView","behavior","block","_ref2","imageList","_step","imagePreloads","_iterator","_createForOfIteratorHelper","_loop","img","Promise","resolve","imgToPreload","Image","onload","onerror","s","n","done","err","f","allSettled","preloadImages","images","preloader","ref","item","i","text","ContainerScenes","scenes","setReady","lastSceneIndex","container_scenes","GameRoute","Container","Settings","Backdrop","backdrop","Modal","modal","CloseButton","title","datapointsFontSize","minFontSize","maxFontSize","stepFontSize","SettingsText","font","settings_text","settings_fontsize_container","settings_font_a","settings_fontsize_input_container","settings_fontsize_input","step","defaultFontSize","onInput","list","settings_font_sample","fonts","sampleFontsizeText","SettingsFont","settings_font_container","Object","entries","k","v","selected","SettingButton","themeId","themeConfig","buttonStyle","color","settings_theme_button","SettingsTheme","handleTheme","attributes","settings_theme_container","themes","_ref3","SettingsAnimation","animation","SettingsVersion","version","isOpen","openSettings","toggleSettings","escHandler","document","addEventListener","removeEventListener"],"mappings":"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","file":"route-game.chunk.9dc16.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings_sound_container\":\"settings_sound_container__WoyeI\",\"settings_sound_input_container\":\"settings_sound_input_container__axpip\",\"settings_sound_volume\":\"settings_sound_volume__cNUs2\",\"settings_sound_icon\":\"settings_sound_icon__hUeu9\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkbox_wrapper\":\"checkbox_wrapper__-wNzj\",\"checkbox\":\"checkbox__XUrp9\",\"focus-visible\":\"focus-visible__U28+i\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Toggle = ({enabled, onChange}) => (\n  <div class={style.checkbox_wrapper}>\n    <input type=\"checkbox\" class={style.checkbox} checked={enabled} onChange={onChange} />\n  </div>\n);\n\nexport default Toggle;\n\n","import { h } from 'preact';\nimport style from './index.css';\nimport Toggle from 'src/components/ui/toggle';\n\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsSound = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleMute = (e) => updateSettings('mute', !e.target.checked);\n  const handleVolume = (e) => updateSettings('volume', e.target.value);\n  const { mute, volume } = state.settings;\n\n  return (\n    <>\n      <div class={[style.settings_sound, 'atrament-settings-sound'].join(' ')}>\n        <Toggle enabled={!mute} onChange={handleMute} /> Sound\n      </div>\n      <div class={style.settings_sound_container}>\n        <div class={style.settings_sound_icon}>&#128265;</div>\n        <div class={style.settings_sound_input_container}>\n          <input\n            class={style.settings_sound_volume}\n            disabled={mute}\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={volume}\n            onChange={handleVolume}\n          />\n        </div>\n        <div class={style.settings_sound_icon}>&#128266;</div>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsSound;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"block__5Kw+w\",\"block_start\":\"block_start__qEaDh\",\"block_end\":\"block_end__ZWY1I\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Block = ({ children, align }) => {\n  const cssStyles = [style.block];\n  if (align === 'start') {\n    cssStyles.push(style.block_start);\n  } else if (align === 'end') {\n    cssStyles.push(style.block_end);\n  }\n  cssStyles.push('atrament-block');\n  return (\n    <div class={cssStyles.join(' ')}>\n      {children}\n    </div>\n  );\n};\n\nexport default Block;\n","import { useState, useEffect } from 'preact/hooks'\nimport { listenKeys } from 'nanostores'\n\nexport function useStore(store, opts = {}) {\n  let [, forceRender] = useState({})\n  let [valueBeforeEffect] = useState(store.get())\n\n  useEffect(() => {\n    valueBeforeEffect !== store.get() && forceRender({})\n  }, [])\n  \n  useEffect(() => {\n    let batching, timer, unlisten\n    let rerender = () => {\n      if (!batching) {\n        batching = 1\n        timer = setTimeout(() => {\n          batching = undefined\n          forceRender({})\n        })\n      }\n    }\n    if (opts.keys) {\n      unlisten = listenKeys(store, opts.keys, rerender)\n    } else {\n      unlisten = store.listen(rerender)\n    }\n    return () => {\n      unlisten()\n      clearTimeout(timer)\n    }\n  }, [store, '' + opts.keys])\n\n  return store.get()\n}\n","export function listenKeys(store, keys, listener) {\n  let keysSet = new Set([...keys, undefined])\n  return store.listen((value, changed) => {\n    if (keysSet.has(changed)) {\n      listener(value, changed)\n    }\n  })\n}\n","import { useContext } from 'preact/hooks';\nimport { useStore } from '@nanostores/preact';\nimport Atrament from 'src/atrament-context';\n\nconst useAtrament = () => {\n  const atrament = useContext(Atrament);\n  const state = useStore(atrament.store());\n\n  return {\n    atrament,\n    state,\n    canResume: atrament.game.canResume,\n    gameStart: atrament.game.start,\n    gameResume: atrament.game.resume,\n    makeChoice: atrament.game.makeChoice,\n    continueStory: atrament.game.continueStory,\n    updateSettings: (name, value) => {\n      atrament.settings.set(name, value);\n      atrament.settings.save();\n    }\n  };\n};\n\nexport default useAtrament;\n","// extracted by mini-css-extract-plugin\nexport default {\"container_text\":\"container_text__ZXoDQ\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst ContainerText = ({ children, fontSize }) => {  \n  return (\n    <div class={[style.container_text, 'atrament-text-container'].join(' ')} style={{'font-size': `${fontSize}%`}}>\n      {children}\n    </div>\n  );\n};\n\nexport default ContainerText;\n","// extracted by mini-css-extract-plugin\nexport default {\"container_choices\":\"container_choices__0MzpN\"};","// extracted by mini-css-extract-plugin\nexport default {\"choice_button\":\"choice_button__rAvgB\"};","import { h } from 'preact';\nimport style from './index.css';\nimport { useCallback } from 'preact/hooks';\n\nconst ChoiceButton = ({ choice, handleClick }) => {\n  const onClick = useCallback(() => {\n    handleClick(choice.id);\n  }, [ choice, handleClick ]);\n  return (\n    <button class={style.choice_button} onClick={onClick} dangerouslySetInnerHTML={{__html: choice.choice}} />\n  );\n};\n\nexport default ChoiceButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"link_home\":\"link_home__T3cHG\"};","import { h } from 'preact';\nimport { route } from 'preact-router';\nimport style from './index.css';\n\nimport Block from '../block';\nimport useAtrament from 'src/atrament/hooks';\n\nconst LinkHome = () => {\n  const { atrament } = useAtrament();\n\n  const endGame = async () => {\n    await atrament.game.removeSave();\n    route('/');\n  };\n\n  return (\n    <Block>\n      <button key=\"mainmenu\" onClick={endGame} class={style.link_home}>The end</button>\n    </Block>\n  );\n};\n\nexport default LinkHome;\n","import { h } from 'preact';\nimport style from './index.css';\nimport { useCallback } from 'preact/hooks';\n// UI\nimport Block from '../block';\nimport ChoiceButton from '../choice-button';\nimport LinkHome from '../link-home';\n// atrament\nimport useAtrament from 'src/atrament/hooks';\n\nconst ContainerChoices = ({ currentScene, readyHandler, isReady }) => {\n  const { makeChoice, continueStory } = useAtrament();\n  \n  const selectChoice = useCallback((id) => {\n    readyHandler(false);\n    setTimeout(() => {\n      makeChoice(id);\n      continueStory();  \n    }, 200);\n  }, [ makeChoice, continueStory, readyHandler ]);\n\n  if (!currentScene || !currentScene.choices) {\n    return '';\n  }\n  if (currentScene.choices.length === 0) {\n    return <LinkHome />;\n  } \n\n  const key = `choices-${currentScene.uuid}`;\n  return (\n    <div key={key} class={[style.container_choices, 'atrament-container-choices', isReady ? 'animation_appear' : ''].join(' ')}>\n      <div style={{ opacity: isReady ? 1 : 0 }}>\n        <Block>\n          {currentScene.choices.map((choice, index) => (\n            <ChoiceButton\n              key={`${key}-${index}`}\n              choice={choice}\n              handleClick={selectChoice}\n            />)\n          )}\n        </Block>\n      </div>\n    </div>\n  )\n};\n\nexport default ContainerChoices;","// extracted by mini-css-extract-plugin\nexport default {\"container_scenes\":\"container_scenes__+M1gn\"};","// extracted by mini-css-extract-plugin\nexport default {\"scene\":\"scene__Sj0DE\"};","// extracted by mini-css-extract-plugin\nexport default {\"imagebox\":\"imagebox__XCLvI\",\"image\":\"image__DtVyK\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst ContainerImage = ({ src }) => (\n  src ?\n    <div class={[style.imagebox, 'atrament-image-container'].join(' ')}>\n      <img src={src} class={[style.image, 'atrament-image'].join(' ')} />\n    </div>\n    :\n    ''\n);\n\nexport default ContainerImage;","import { h } from 'preact';\n\nconst Paragraph = ( {content, isCurrent} ) => {\n  let pStyle;\n  if (!isCurrent) {\n    pStyle = {opacity: '70%'};\n  }\n  if (content === \"\\n\") {\n    return '';\n  }\n  return (<p style={pStyle} dangerouslySetInnerHTML={{__html: content}} />);\n}\n\nexport default Paragraph;\n","import { h, Fragment } from 'preact';\nimport style from './index.css';\nimport { useRef, useState, useEffect } from 'preact/hooks';\n// UI\nimport ContainerImage from '../container-image';\nimport Paragraph from '../scene-paragraph';\n// utils\nimport preloadImages from 'src/utils/preload-images';\n\nconst Scene = ({ scene, isCurrent, readyHandler }) => {\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    if (isLoaded && isCurrent) {\n      readyHandler(true);\n      setTimeout(\n        () => elementRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' }),\n        100\n      );\n    }\n  }, [isLoaded, isCurrent, elementRef, readyHandler]);\n\n  // preload all images for scene\n  useEffect(() => {\n    const preloader = async () => {\n      await preloadImages(scene.images);\n      setIsLoaded(true);\n    }\n    preloader();\n  }, [ scene, setIsLoaded ]);\n\n  return (\n    <div class={[style.scene, 'atrament-scene', isCurrent && isLoaded ? 'animation_appear' : ''].join(' ')} ref={elementRef}>\n      <div style={{ opacity: isLoaded ? 1 : 0 }}>\n        {\n          scene.content.map((item, i) => (\n            <Fragment key={`paragraph-${scene.uuid}-${i}`}>\n              <ContainerImage src={item.image} />\n              <Paragraph isCurrent={isCurrent} content={item.text} />\n            </Fragment>\n          ))\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default Scene;\n","export default function preloadImages(imageList) {\n  const imagePreloads = [];\n  for (let img of imageList) {\n    imagePreloads.push(new Promise((resolve) => {\n      const imgToPreload = new Image();\n      imgToPreload.onload = resolve;\n      imgToPreload.onerror = resolve;\n      imgToPreload.src = img;\n    }));\n  }\n  return Promise.allSettled(imagePreloads);\n}\n","import { h } from 'preact';\nimport style from './index.css';\nimport Scene from '../scene';\n\nconst ContainerScenes = ({ scenes, setReady }) => {\n  const lastSceneIndex = scenes.length - 1;\n  return (\n    <div class={[style.container_scenes, 'atrament-container-scene'].join(' ')}>\n      {\n        scenes.map((s, i) => <Scene key={s.uuid} scene={s} isCurrent={i === lastSceneIndex} readyHandler={setReady} />)\n      }\n    </div>\n  );\n};\n\nexport default ContainerScenes;\n","import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport useAtrament from 'src/atrament/hooks';\n\nimport Container from '../ui/container';\nimport ContainerText from '../ui/container-text';\nimport ContainerChoices from '../ui/container-choices';\nimport ContainerScenes from '../ui/container-scenes';\n\nimport Settings from 'src/components/settings';\n\nconst GameRoute = () => {\n  const { state, continueStory } = useAtrament();\n  const [ isReady, setReady ] = useState(false);\n\n  useEffect(() => {\n    continueStory();\n  }, [ continueStory ]);\n\n  const lastSceneIndex = state.scenes.length - 1;\n\n  return (\n    <Container>\n      <Settings />\n      <ContainerText fontSize={state.settings.fontSize}>\n        <ContainerScenes scenes={state.scenes} setReady={setReady} />\n        <ContainerChoices currentScene={state.scenes[lastSceneIndex]} isReady={isReady} readyHandler={setReady} />\n      </ContainerText>\n    </Container>\n  );\n};\n\nexport default GameRoute;\n","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { defaultFontSize, stepFontSize, minFontSize, maxFontSize, sampleFontsizeText } from 'src/constants';\n\nimport { fonts } from 'src/theme';\n\nconst datapointsFontSize = [];\nfor (let s=minFontSize; s <= maxFontSize; s+= stepFontSize) {\n  datapointsFontSize.push(s);\n}\n\nconst SettingsText = () => {\n  const { state, updateSettings } = useAtrament();\n  const { font, fontSize } = state.settings;\n\n  const handleFontSize = (e) => updateSettings('fontSize', e.target.value);\n\n  return (\n    <div class={[style.settings_text, 'atrament-settings-text'].join(' ')}>\n      <div class={style.settings_fontsize_container}>\n        <div class={style.settings_font_a} style={{'font-size': `${minFontSize}%`}}>A</div>\n        <div class={style.settings_fontsize_input_container}>\n          <input\n            class={style.settings_fontsize_input}\n            type=\"range\"\n            min={minFontSize}\n            max={maxFontSize}\n            step={stepFontSize}\n            value={fontSize || defaultFontSize}\n            onInput={handleFontSize}\n            list=\"fontSizes\"\n          />\n          <datalist id=\"fontSizes\">\n            {datapointsFontSize.map((f) => <option key={f} value={f} />)}\n          </datalist>\n        </div>\n        <div class={style.settings_font_a} style={{'font-size': `${maxFontSize}%`}}>A</div>\n      </div>\n      <div class={style.settings_font_sample} style={{'font-size': `${fontSize}%`, 'font-family': fonts[font]}}>\n        {sampleFontsizeText}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsText;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_container\":\"settings_container__u7wMh\",\"settings_toggle\":\"settings_toggle__GG4xN\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"backdrop__m+OYW\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Backdrop = ({ onClick }) => (\n  <div class={[style.backdrop, 'atrament-backdrop'].join(' ')} onClick={onClick} />\n);\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__q1MeB\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Modal = ({ children }) => (\n  <div class={[style.modal, 'atrament-modal'].join(' ')}>\n    {children}\n  </div>\n);\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"close\":\"close__w21r1\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst CloseButton = ({onClick}) => (\n  <div class={style.close}>\n    <button onClick={onClick} title=\"Close\">&#x2715;</button>\n  </div>\n);\n\nexport default CloseButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_fontsize_container\":\"settings_fontsize_container__FyyGe\",\"settings_font_a\":\"settings_font_a__bZJJw\",\"settings_fontsize_input_container\":\"settings_fontsize_input_container__VNMn2\",\"settings_fontsize_input\":\"settings_fontsize_input__s0YXN\",\"settings_font_sample\":\"settings_font_sample__2n2cX\"};","// extracted by mini-css-extract-plugin\nexport default {\"settings_font_container\":\"settings_font_container__XUIDw\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { fonts } from 'src/theme';\n\nconst SettingsFont = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleFont = (e) => updateSettings('font', e.target.value);\n  const font = state.settings.font;\n  return (\n    <div class={[style.settings_font_container, 'atrament-settings-font'].join(' ')}>\n      <select onChange={handleFont} style={{'font-family': fonts[font]}}>\n        {Object.entries(fonts).map(([k, v]) => (\n          <option key={k} value={k} style={{'font-family': v}} selected={font === k}>{k}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SettingsFont;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_theme_container\":\"settings_theme_container__ZF0WE\",\"settings_theme_button\":\"settings_theme_button__+oQkm\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { themes } from 'src/theme';\n\nconst SettingButton = ({themeId, themeConfig, onClick }) =>  {\n  const buttonStyle={\n    color: themeConfig['--fg-color'],\n    'background-color': themeConfig['--bg-color']\n  }\n  return (<button class={style.settings_theme_button} style={buttonStyle} onClick={onClick} data-theme-id={themeId}>{themeId}</button>);\n};\n\nconst SettingsTheme = () => {\n  const { updateSettings } = useAtrament();\n  const handleTheme = (e) => updateSettings('theme', e.target.attributes['data-theme-id'].value);\n  return (\n    <div class={[style.settings_theme_container, 'atrament-settings-theme'].join(' ')}>\n      {Object.entries(themes).map(([k, v]) => {\n        return <SettingButton key={k} themeId={k} themeConfig={v} onClick={handleTheme} />\n      })}\n    </div>\n  );\n};\n\nexport default SettingsTheme;\n","import { h } from 'preact';\nimport Toggle from 'src/components/ui/toggle';\n\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsAnimation = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleAnimation = (e) => updateSettings('animation', e.target.checked);\n\n  return (\n    <div class={['atrament-settings-animation'].join(' ')}>\n      <Toggle enabled={state.settings.animation} onChange={handleAnimation} /> Animations\n    </div>\n  );\n};\n\nexport default SettingsAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_about\":\"settings_about__rS73I\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsVersion = () => {\n  const { atrament } = useAtrament();\n  return (<div class={style.settings_about}>atrament {atrament.version}</div>);\n};\n\nexport default SettingsVersion;\n\n","import { h } from 'preact';\nimport style from './index.css';\n\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nimport Backdrop from '../ui/backdrop';\nimport Modal from '../ui/modal';\nimport CloseButton from '../ui/close-button';\n\nimport SettingsSound from './settings-sound';\nimport SettingsText from './settings-text';\nimport SettingsFont from './settings-font';\nimport SettingsTheme from './settings-theme';\nimport SettingsAnimation from './settings-animation';\nimport SettingsVersion from './settings-version';\n\n\nconst Settings = () => {\n  //\n  const [ isOpen, openSettings ] = useState(false);\n  const toggleSettings = useCallback(() => openSettings(!isOpen), [ isOpen ]);\n\n  const escHandler = useCallback((e) => {\n    if (e.key === \"Escape\") {\n      openSettings(false)\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escHandler, false);\n    return () => {\n      document.removeEventListener(\"keydown\", escHandler, false);\n    }\n  }, [ escHandler ]);\n\n  if (isOpen) {\n    return (\n      <div class={style.settings_container}>\n        <Backdrop onClick={toggleSettings} />\n        <Modal>\n          <CloseButton onClick={toggleSettings} />\n          <SettingsAnimation />\n          <SettingsSound />\n          <SettingsFont />\n          <SettingsText />\n          <SettingsTheme />\n          <SettingsVersion />\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <button class={style.settings_toggle} onClick={toggleSettings}>☰</button>\n  );\n};\n\nexport default Settings;"],"sourceRoot":""}