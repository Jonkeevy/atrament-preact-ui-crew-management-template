{"version":3,"sources":["webpack:///./components/settings/settings-sound/index.css","webpack:///./components/ui/toggle/index.css","webpack:///./components/ui/toggle/index.js","webpack:///./components/settings/settings-sound/index.js","webpack:///./components/ui/block/index.css","webpack:///./components/ui/block/index.js","webpack:///./components/ui/header/index.css","webpack:///./components/ui/header/index.js","webpack:///./components/ui/link-menu/index.css","webpack:///./components/ui/link-menu/index.js","webpack:///./components/routes/home.js","webpack:///../node_modules/@nanostores/preact/index.js","webpack:///../node_modules/nanostores/listen-keys/index.js","webpack:///./atrament/hooks.js","webpack:///./components/settings/settings-text/index.js","webpack:///./components/settings/index.css","webpack:///./components/ui/backdrop/index.css","webpack:///./components/ui/backdrop/index.js","webpack:///./components/ui/modal/index.css","webpack:///./components/ui/modal/index.js","webpack:///./components/ui/close-button/index.css","webpack:///./components/ui/close-button/index.js","webpack:///./components/settings/settings-text/index.css","webpack:///./components/settings/settings-font/index.css","webpack:///./components/settings/settings-font/index.js","webpack:///./components/settings/settings-theme/index.css","webpack:///./components/settings/settings-theme/index.js","webpack:///./components/settings/settings-animation/index.js","webpack:///./components/settings/settings-version/index.css","webpack:///./components/settings/settings-version/index.js","webpack:///./components/settings/index.js"],"names":["Toggle","_ref","enabled","onChange","h","class","style","type","checked","SettingsSound","_useAtrament","useAtrament","updateSettings","_state$settings","state","settings","mute","volume","Fragment","settings_sound","join","e","target","settings_sound_container","settings_sound_icon","settings_sound_input_container","settings_sound_volume","disabled","min","max","value","Block","children","align","cssStyles","push","Header","header","header_align","LinkMenu","key","onClick","HomeRoute","canResume","gameStart","gameResume","_state$metadata","metadata","title","author","_useState2","_slicedToArray","useState","canBeResumed","setResumeState","useEffect","_asyncToGenerator","canResumeGame","apply","arguments","initHome","newGame","useCallback","route","resumeGame","Container","ContainerFlex","Settings","concat","useStore","store","opts","length","undefined","forceRender","valueBeforeEffect","get","batching","timer","unlisten","rerender","setTimeout","keys","listener","keysSet","Set","_toConsumableArray","listen","changed","has","listenKeys","clearTimeout","atrament","useContext","Atrament","game","start","resume","makeChoice","continueStory","name","set","save","Backdrop","backdrop","Modal","modal","CloseButton","datapointsFontSize","s","minFontSize","maxFontSize","stepFontSize","SettingsText","font","fontSize","settings_text","settings_fontsize_container","settings_font_a","settings_fontsize_input_container","settings_fontsize_input","step","defaultFontSize","onInput","list","id","map","f","settings_font_sample","fonts","sampleFontsizeText","SettingsFont","settings_font_container","Object","entries","_ref2","k","v","selected","SettingButton","themeId","themeConfig","buttonStyle","color","settings_theme_button","SettingsTheme","handleTheme","attributes","settings_theme_container","themes","_ref3","SettingsAnimation","animation","SettingsVersion","version","isOpen","openSettings","toggleSettings","escHandler","document","addEventListener","removeEventListener"],"mappings":"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","file":"route-home.chunk.d8425.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings_sound_container\":\"settings_sound_container__WoyeI\",\"settings_sound_input_container\":\"settings_sound_input_container__axpip\",\"settings_sound_volume\":\"settings_sound_volume__cNUs2\",\"settings_sound_icon\":\"settings_sound_icon__hUeu9\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkbox_wrapper\":\"checkbox_wrapper__-wNzj\",\"checkbox\":\"checkbox__XUrp9\",\"focus-visible\":\"focus-visible__U28+i\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Toggle = ({enabled, onChange}) => (\n  <div class={style.checkbox_wrapper}>\n    <input type=\"checkbox\" class={style.checkbox} checked={enabled} onChange={onChange} />\n  </div>\n);\n\nexport default Toggle;\n\n","import { h } from 'preact';\nimport style from './index.css';\nimport Toggle from 'src/components/ui/toggle';\n\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsSound = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleMute = (e) => updateSettings('mute', !e.target.checked);\n  const handleVolume = (e) => updateSettings('volume', e.target.value);\n  const { mute, volume } = state.settings;\n\n  return (\n    <>\n      <div class={[style.settings_sound, 'atrament-settings-sound'].join(' ')}>\n        <Toggle enabled={!mute} onChange={handleMute} /> Sound\n      </div>\n      <div class={style.settings_sound_container}>\n        <div class={style.settings_sound_icon}>&#128265;</div>\n        <div class={style.settings_sound_input_container}>\n          <input\n            class={style.settings_sound_volume}\n            disabled={mute}\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            value={volume}\n            onChange={handleVolume}\n          />\n        </div>\n        <div class={style.settings_sound_icon}>&#128266;</div>\n      </div>\n    </>\n  );\n};\n\nexport default SettingsSound;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"block__5Kw+w\",\"block_start\":\"block_start__qEaDh\",\"block_end\":\"block_end__ZWY1I\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Block = ({ children, align }) => {\n  const cssStyles = [style.block];\n  if (align === 'start') {\n    cssStyles.push(style.block_start);\n  } else if (align === 'end') {\n    cssStyles.push(style.block_end);\n  }\n  cssStyles.push('atrament-block');\n  return (\n    <div class={cssStyles.join(' ')}>\n      {children}\n    </div>\n  );\n};\n\nexport default Block;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header__76MLv\",\"header_align\":\"header_align__UjY+Q\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Header = ({ children }) => (\n  <div class={[style.header, 'atrament-header'].join(' ')}>\n    <div class={style.header_align}>\n      {children}\n    </div>\n  </div>\n);\n\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"link_menu\":\"link_menu__S6+au\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst LinkMenu = ({children, key, onClick}) => (\n  <div>\n    <button key={key} onClick={onClick} class={style.link_menu}>{children}</button>\n  </div>\n);\n\nexport default LinkMenu;","import { h } from 'preact';\nimport { route } from 'preact-router';\nimport { useEffect, useState, useCallback } from 'preact/hooks';\nimport useAtrament from 'src/atrament/hooks';\n\nimport Block from '../ui/block';\nimport Container from '../ui/container';\nimport ContainerFlex from '../ui/container-flex';\nimport Header from '../ui/header';\nimport LinkMenu from '../ui/link-menu';\n\nimport Settings from 'src/components/settings';\n\nconst HomeRoute = () => {\n  const { state, canResume, gameStart, gameResume } = useAtrament();\n\n  const { title, author } = state.metadata;\n\n  const [ canBeResumed, setResumeState ] = useState(false);\n  useEffect(() => {\n    const initHome = async () => {\n      const canResumeGame = await canResume();\n      setResumeState(!!canResumeGame);\n    }\n    initHome();\n  }, [ canResume ]);\n\n  const newGame = useCallback(async () => {\n    await gameStart();\n    route('/game');\n  }, [ gameStart ]);\n\n  const resumeGame = useCallback(async () => {\n    await gameResume();\n    route('/game');\n  }, [ gameResume ]);\n\n  return (\n    <Container>\n      <ContainerFlex>\n        <Settings />\n        <Header>\n          <h1>{title ? title : \"Atrament UI\"}</h1>\n          <p>{author ? `by ${author}` : \"Test application\"}</p>\n        </Header>\n        <Block align='end'>\n          {canBeResumed ? <LinkMenu key=\"continuegame\" onClick={resumeGame}>Continue</LinkMenu> : ''}\n          <LinkMenu key=\"startgame\" onClick={newGame}>New game</LinkMenu>\n        </Block>\n      </ContainerFlex>\n    </Container>\n  );\n};\n\nexport default HomeRoute;","import { useState, useEffect } from 'preact/hooks'\nimport { listenKeys } from 'nanostores'\n\nexport function useStore(store, opts = {}) {\n  let [, forceRender] = useState({})\n  let [valueBeforeEffect] = useState(store.get())\n\n  useEffect(() => {\n    valueBeforeEffect !== store.get() && forceRender({})\n  }, [])\n  \n  useEffect(() => {\n    let batching, timer, unlisten\n    let rerender = () => {\n      if (!batching) {\n        batching = 1\n        timer = setTimeout(() => {\n          batching = undefined\n          forceRender({})\n        })\n      }\n    }\n    if (opts.keys) {\n      unlisten = listenKeys(store, opts.keys, rerender)\n    } else {\n      unlisten = store.listen(rerender)\n    }\n    return () => {\n      unlisten()\n      clearTimeout(timer)\n    }\n  }, [store, '' + opts.keys])\n\n  return store.get()\n}\n","export function listenKeys(store, keys, listener) {\n  let keysSet = new Set([...keys, undefined])\n  return store.listen((value, changed) => {\n    if (keysSet.has(changed)) {\n      listener(value, changed)\n    }\n  })\n}\n","import { useContext } from 'preact/hooks';\nimport { useStore } from '@nanostores/preact';\nimport Atrament from 'src/atrament-context';\n\nconst useAtrament = () => {\n  const atrament = useContext(Atrament);\n  const state = useStore(atrament.store());\n\n  return {\n    atrament,\n    state,\n    canResume: atrament.game.canResume,\n    gameStart: atrament.game.start,\n    gameResume: atrament.game.resume,\n    makeChoice: atrament.game.makeChoice,\n    continueStory: atrament.game.continueStory,\n    updateSettings: (name, value) => {\n      atrament.settings.set(name, value);\n      atrament.settings.save();\n    }\n  };\n};\n\nexport default useAtrament;\n","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { defaultFontSize, stepFontSize, minFontSize, maxFontSize, sampleFontsizeText } from 'src/constants';\n\nimport { fonts } from 'src/theme';\n\nconst datapointsFontSize = [];\nfor (let s=minFontSize; s <= maxFontSize; s+= stepFontSize) {\n  datapointsFontSize.push(s);\n}\n\nconst SettingsText = () => {\n  const { state, updateSettings } = useAtrament();\n  const { font, fontSize } = state.settings;\n\n  const handleFontSize = (e) => updateSettings('fontSize', e.target.value);\n\n  return (\n    <div class={[style.settings_text, 'atrament-settings-text'].join(' ')}>\n      <div class={style.settings_fontsize_container}>\n        <div class={style.settings_font_a} style={{'font-size': `${minFontSize}%`}}>A</div>\n        <div class={style.settings_fontsize_input_container}>\n          <input\n            class={style.settings_fontsize_input}\n            type=\"range\"\n            min={minFontSize}\n            max={maxFontSize}\n            step={stepFontSize}\n            value={fontSize || defaultFontSize}\n            onInput={handleFontSize}\n            list=\"fontSizes\"\n          />\n          <datalist id=\"fontSizes\">\n            {datapointsFontSize.map((f) => <option key={f} value={f} />)}\n          </datalist>\n        </div>\n        <div class={style.settings_font_a} style={{'font-size': `${maxFontSize}%`}}>A</div>\n      </div>\n      <div class={style.settings_font_sample} style={{'font-size': `${fontSize}%`, 'font-family': fonts[font]}}>\n        {sampleFontsizeText}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsText;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_container\":\"settings_container__u7wMh\",\"settings_toggle\":\"settings_toggle__GG4xN\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"backdrop__m+OYW\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Backdrop = ({ onClick }) => (\n  <div class={[style.backdrop, 'atrament-backdrop'].join(' ')} onClick={onClick} />\n);\n\nexport default Backdrop;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__q1MeB\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Modal = ({ children }) => (\n  <div class={[style.modal, 'atrament-modal'].join(' ')}>\n    {children}\n  </div>\n);\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"close\":\"close__w21r1\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst CloseButton = ({onClick}) => (\n  <div class={style.close}>\n    <button onClick={onClick} title=\"Close\">&#x2715;</button>\n  </div>\n);\n\nexport default CloseButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_fontsize_container\":\"settings_fontsize_container__FyyGe\",\"settings_font_a\":\"settings_font_a__bZJJw\",\"settings_fontsize_input_container\":\"settings_fontsize_input_container__VNMn2\",\"settings_fontsize_input\":\"settings_fontsize_input__s0YXN\",\"settings_font_sample\":\"settings_font_sample__2n2cX\"};","// extracted by mini-css-extract-plugin\nexport default {\"settings_font_container\":\"settings_font_container__XUIDw\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { fonts } from 'src/theme';\n\nconst SettingsFont = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleFont = (e) => updateSettings('font', e.target.value);\n  const font = state.settings.font;\n  return (\n    <div class={[style.settings_font_container, 'atrament-settings-font'].join(' ')}>\n      <select onChange={handleFont} style={{'font-family': fonts[font]}}>\n        {Object.entries(fonts).map(([k, v]) => (\n          <option key={k} value={k} style={{'font-family': v}} selected={font === k}>{k}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SettingsFont;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_theme_container\":\"settings_theme_container__ZF0WE\",\"settings_theme_button\":\"settings_theme_button__+oQkm\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nimport { themes } from 'src/theme';\n\nconst SettingButton = ({themeId, themeConfig, onClick }) =>  {\n  const buttonStyle={\n    color: themeConfig['--fg-color'],\n    'background-color': themeConfig['--bg-color']\n  }\n  return (<button class={style.settings_theme_button} style={buttonStyle} onClick={onClick} data-theme-id={themeId}>{themeId}</button>);\n};\n\nconst SettingsTheme = () => {\n  const { updateSettings } = useAtrament();\n  const handleTheme = (e) => updateSettings('theme', e.target.attributes['data-theme-id'].value);\n  return (\n    <div class={[style.settings_theme_container, 'atrament-settings-theme'].join(' ')}>\n      {Object.entries(themes).map(([k, v]) => {\n        return <SettingButton key={k} themeId={k} themeConfig={v} onClick={handleTheme} />\n      })}\n    </div>\n  );\n};\n\nexport default SettingsTheme;\n","import { h } from 'preact';\nimport Toggle from 'src/components/ui/toggle';\n\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsAnimation = () => {\n  const { state, updateSettings } = useAtrament();\n  const handleAnimation = (e) => updateSettings('animation', e.target.checked);\n\n  return (\n    <div class={['atrament-settings-animation'].join(' ')}>\n      <Toggle enabled={state.settings.animation} onChange={handleAnimation} /> Animations\n    </div>\n  );\n};\n\nexport default SettingsAnimation;\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_about\":\"settings_about__rS73I\"};","import { h } from 'preact';\nimport style from './index.css';\nimport useAtrament from 'src/atrament/hooks';\n\nconst SettingsVersion = () => {\n  const { atrament } = useAtrament();\n  return (<div class={style.settings_about}>atrament {atrament.version}</div>);\n};\n\nexport default SettingsVersion;\n\n","import { h } from 'preact';\nimport style from './index.css';\n\nimport { useCallback, useEffect, useState } from 'preact/hooks';\n\nimport Backdrop from '../ui/backdrop';\nimport Modal from '../ui/modal';\nimport CloseButton from '../ui/close-button';\n\nimport SettingsSound from './settings-sound';\nimport SettingsText from './settings-text';\nimport SettingsFont from './settings-font';\nimport SettingsTheme from './settings-theme';\nimport SettingsAnimation from './settings-animation';\nimport SettingsVersion from './settings-version';\n\n\nconst Settings = () => {\n  //\n  const [ isOpen, openSettings ] = useState(false);\n  const toggleSettings = useCallback(() => openSettings(!isOpen), [ isOpen ]);\n\n  const escHandler = useCallback((e) => {\n    if (e.key === \"Escape\") {\n      openSettings(false)\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escHandler, false);\n    return () => {\n      document.removeEventListener(\"keydown\", escHandler, false);\n    }\n  }, [ escHandler ]);\n\n  if (isOpen) {\n    return (\n      <div class={style.settings_container}>\n        <Backdrop onClick={toggleSettings} />\n        <Modal>\n          <CloseButton onClick={toggleSettings} />\n          <SettingsAnimation />\n          <SettingsSound />\n          <SettingsFont />\n          <SettingsText />\n          <SettingsTheme />\n          <SettingsVersion />\n        </Modal>\n      </div>\n    );\n  }\n  return (\n    <button class={style.settings_toggle} onClick={toggleSettings}>☰</button>\n  );\n};\n\nexport default Settings;"],"sourceRoot":""}