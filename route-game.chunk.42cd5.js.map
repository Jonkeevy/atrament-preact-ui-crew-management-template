{"version":3,"sources":["webpack:///./components/screens/scenes/scene.js","webpack:///./components/screens/scenes/index.css","webpack:///./components/screens/scenes/index.js","webpack:///./components/screens/choices/index.css","webpack:///./components/screens/choices/index.js","webpack:///./components/routes/game.js"],"names":["Scene","_ref","pStyle","scene","isCurrent","atrament","useContext","Atrament","opacity","elementRef","useRef","useEffect","current","scrollIntoView","behavior","h","class","style","block","join","ref","content","map","item","Fragment","tags","IMAGE","Image","src","game","getAssetPath","text","BlockScenes","scenes","lastSceneIndex","length","block_scene","s","i","Choices","choices","handleClick","key","Date","now","block_choices","Block","choice","index","ChoiceButton","concat","GameRoute","gamestate","useStore","store","makeChoice","useCallback","id","continueStory","currentScene","slice","Container","Settings","ContainerText","fontSize","settings","Scenes"],"mappings":"4FAAA,4EAoCeA,IA9BD,SAAHC,GAA6B,IAElCC,EAFWC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UAChBC,EAAWC,YAAWC,KAEvBH,IACHF,EAAS,CAACM,QAAS,QAErB,IAAMC,EAAaC,YAAO,MAO1B,OANAC,aAAU,WACJP,GACFK,EAAWG,QAAQC,eAAe,CAAEC,SAAU,UAElD,GAAG,CAACV,EAAWK,IAGbM,YAAA,OAAKC,MAAO,CAACC,IAAMC,MAAO,sBAAuBd,EAAY,mBAAqB,IAAIe,KAAK,KAAMC,IAAKX,GAElGN,EAAMkB,QACHC,KAAI,SAACC,GACJ,OACER,YAAAS,EAAA,KACGD,EAAKE,KAAKC,MAAQX,YAACY,IAAK,CAACC,IAAKvB,EAASwB,KAAKC,aAAaP,EAAKE,KAAKC,SAAa,GACjFX,YAAA,KAAGE,MAAOf,GAASqB,EAAKQ,MAG9B,IAIV,C,kECjCe,KAAC,YAAc,qBAAqB,MAAQ,e,qICc5CC,EAXK,SAAH/B,GAAmB,IAAbgC,EAAMhC,EAANgC,OACfC,EAAiBD,EAAOE,OAAS,EACvC,OACEpB,YAAA,OAAKC,MAAO,CAACC,IAAMmB,YAAa,wBAAwBjB,KAAK,MAEzDc,EAAOX,KAAI,SAACe,EAAGC,GAAC,OAAKvB,YAACf,IAAK,CAACG,MAAOkC,EAAGjC,UAAWkC,IAAMJ,GAAkB,IAIjF,ECZe,GAAC,cAAgB,wBCsBjBK,EAnBC,SAAHtC,GAAiC,IAA3BuC,EAAOvC,EAAPuC,QAASC,EAAWxC,EAAXwC,YAC1B,GAAKD,EAGL,OACEzB,YAAA,OAAK2B,IAAKC,KAAKC,MAAO5B,MAAO,CAACC,EAAM4B,cAAe,yBAA0B,oBAAoB1B,KAAK,MACpGJ,YAAC+B,IAAK,KACHN,EAAQlB,KAAI,SAACyB,EAAQC,GAAK,OACzBjC,YAACkC,IAAY,CACXP,IAAG,GAAAQ,OAAKP,KAAKC,MAAK,KAAAM,OAAIF,GACtBD,OAAQA,EACRN,YAAaA,GACb,KAKZ,E,YCgBeU,UA1BG,WAChB,IAAM9C,EAAWC,YAAWC,KACtB6C,EAAYC,YAAShD,EAASiD,SAE9BC,EAAaC,aAAY,SAACC,GAC9BpD,EAASwB,KAAK0B,WAAWE,GACzBpD,EAASwB,KAAK6B,eAChB,IAEA/C,aAAU,WACRN,EAASwB,KAAK6B,eAChB,GAAG,IAEH,IAAMC,EAAeP,EAAUnB,OAAO2B,OAAO,GAAG,GAEhD,OACE7C,YAAC8C,IAAS,KACR9C,YAAC+C,IAAQ,MACT/C,YAACgD,IAAa,CAACC,SAAUZ,EAAUa,SAASD,UAC1CjD,YAACmD,EAAM,CAACjC,OAAQmB,EAAUnB,SAC1BlB,YAACwB,EAAO,CAACC,QAASmB,aAAY,EAAZA,EAAcnB,QAASC,YAAac,KAI9D,C","file":"route-game.chunk.42cd5.js","sourcesContent":["import { h } from 'preact';\nimport style from './index.css';\nimport { useRef, useEffect, useContext } from 'preact/hooks';\nimport { Image } from 'src/components/ui';\nimport Atrament from 'src/atrament-context';\n\nconst Scene = ({ scene, isCurrent }) => {\n  const atrament = useContext(Atrament);\n  let pStyle;\n  if (!isCurrent) {\n    pStyle = {opacity: '70%'};\n  }\n  const elementRef = useRef(null);\n  useEffect(() => {\n    if (isCurrent) {\n      elementRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [isCurrent, elementRef]);\n\n  return (\n    <div class={[style.block, 'atrament-block-text', isCurrent ? 'animation_appear' : ''].join(' ')} ref={elementRef}>\n      {\n        scene.content\n          .map((item) => {\n            return (\n              <>\n                {item.tags.IMAGE ? <Image src={atrament.game.getAssetPath(item.tags.IMAGE)} /> : ''}\n                <p style={pStyle}>{item.text}</p>\n              </>\n            );\n          })\n      }\n    </div>\n  )\n};\n\nexport default Scene;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"block_scene\":\"block_scene__IjQGg\",\"block\":\"block__NwK6o\"};","import { h } from 'preact';\nimport style from './index.css';\nimport Scene from './scene';\n\nconst BlockScenes = ({ scenes }) => {\n  const lastSceneIndex = scenes.length - 1;\n  return (\n    <div class={[style.block_scene, 'atrament-block-scene'].join(' ')}>\n      {\n        scenes.map((s, i) => <Scene scene={s} isCurrent={i === lastSceneIndex} />)\n      }\n    </div>\n  );\n};\n\nexport default BlockScenes;\n","// extracted by mini-css-extract-plugin\nexport default {\"block_choices\":\"block_choices__5vDxh\"};","import { h } from 'preact';\nimport style from './index.css';\nimport { Block, ChoiceButton } from 'src/components/ui';\n\nconst Choices = ({ choices, handleClick }) => {\n  if (!choices) {\n    return;\n  }\n  return (\n    <div key={Date.now()} class={[style.block_choices, 'atrament-block-choices', 'animation_appear'].join(' ')}>\n      <Block>\n        {choices.map((choice, index) => (\n          <ChoiceButton\n            key={`${Date.now()}-${index}`}\n            choice={choice}\n            handleClick={handleClick}\n          />)\n        )}\n      </Block>\n    </div>\n  )\n};\n\nexport default Choices;\n","import { h } from 'preact';\r\nimport { useStore } from '@nanostores/preact';\r\nimport Atrament from 'src/atrament-context';\r\n\r\nimport { useCallback, useContext, useEffect } from 'preact/hooks';\r\nimport { Container, ContainerText } from 'src/components/ui';\r\n\r\nimport Scenes from 'src/components/screens/scenes';\r\nimport Choices from 'src/components/screens/choices';\r\nimport Settings from 'src/components/screens/settings';\r\n\r\nconst GameRoute = () => {\r\n  const atrament = useContext(Atrament);\r\n  const gamestate = useStore(atrament.store());\r\n\r\n  const makeChoice = useCallback((id) => {\r\n    atrament.game.makeChoice(id);\r\n    atrament.game.continueStory();\r\n  })\r\n\r\n  useEffect(() => {\r\n    atrament.game.continueStory();\r\n  }, []);\r\n\r\n  const currentScene = gamestate.scenes.slice(-1)[0];\r\n\r\n  return (\r\n    <Container>\r\n      <Settings />\r\n      <ContainerText fontSize={gamestate.settings.fontSize}>\r\n        <Scenes scenes={gamestate.scenes} />\r\n        <Choices choices={currentScene?.choices} handleClick={makeChoice} />\r\n      </ContainerText>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GameRoute;"],"sourceRoot":""}