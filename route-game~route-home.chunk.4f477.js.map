{"version":3,"sources":["webpack:///./components/ui/settings-sound/index.css","webpack:///./components/ui/settings-text/index.js","webpack:///./components/ui/block/index.css","webpack:///./components/ui/block/index.js","webpack:///./components/ui/choice-button/index.css","webpack:///./components/ui/choice-button/index.js","webpack:///./components/ui/container-text/index.css","webpack:///./components/ui/container-text/index.js","webpack:///./components/ui/header/index.css","webpack:///./components/ui/header/index.js","webpack:///./components/ui/image/index.css","webpack:///./components/ui/image/index.js","webpack:///./components/ui/link-menu/index.css","webpack:///./components/ui/link-menu/index.js","webpack:///./components/ui/settings-animation/index.js","webpack:///./components/ui/settings-backdrop/index.css","webpack:///./components/ui/settings-backdrop/index.js","webpack:///./components/ui/settings-close-button/index.css","webpack:///./components/ui/settings-close-button/index.js","webpack:///./components/ui/settings-modal/index.css","webpack:///./components/ui/settings-modal/index.js","webpack:///./components/ui/settings-font/index.css","webpack:///./components/ui/settings-font/index.js","webpack:///./components/ui/settings-text/index.css","webpack:///./components/ui/settings-theme/index.css","webpack:///./components/ui/settings-theme/index.js","webpack:///./components/ui/toggle/index.css","webpack:///./components/ui/toggle/index.js","webpack:///./components/screens/settings/index.css","webpack:///./components/screens/settings/index.js","webpack:///./components/ui/settings-sound/index.js","webpack:///../node_modules/@nanostores/preact/index.js","webpack:///../node_modules/nanostores/listen-keys/index.js"],"names":["Block","_ref","children","align","cssStyles","style","push","h","class","join","ChoiceButton","choice","handleClick","onClick","useCallback","id","ContainerText","fontSize","container_text","concat","Header","header","header_align","Image","src","imagebox","image","LinkMenu","key","SettingsAnimation","animation","setAnimation","handleAnimation","e","target","checked","Toggle","enabled","onChange","SettingsBackdrop","backdrop","SettingsCloseButton","title","SettingsModal","settings","SettingsFont","font","setFont","handleFont","value","settings_font_container","fonts","Object","entries","map","_ref2","_ref3","_slicedToArray","k","v","selected","datapointsFontSize","s","minFontSize","maxFontSize","stepFontSize","SettingsText","setFontSize","handleFontSize","settings_text","settings_fontsize_container","settings_font_a","settings_fontsize_input_container","settings_fontsize_input","type","min","max","step","defaultFontSize","onInput","list","f","settings_font_sample","sampleFontsizeText","SettingButton","themeId","themeConfig","buttonStyle","color","settings_theme_button","SettingsTheme","setTheme","handleTheme","attributes","settings_theme_container","themes","_ref4","Settings","atrament","useContext","Atrament","useStore","store","set","save","setMute","toggle","setVolume","_useState2","useState","isOpen","openSettings","toggleSettings","escHandler","useEffect","document","addEventListener","removeEventListener","SettingsSound","mute","volume","theme","width","version","handleMute","handleVolume","Fragment","settings_sound","settings_sound_container","settings_sound_icon","settings_sound_input_container","settings_sound_volume","disabled","opts","arguments","length","undefined","forceRender","valueBeforeEffect","get","batching","timer","unlisten","rerender","setTimeout","keys","listener","keysSet","Set","_toConsumableArray","listen","changed","has","listenKeys","clearTimeout"],"mappings":"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","file":"route-game~route-home.chunk.4f477.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings_sound_container\":\"settings_sound_container__tdffk\",\"settings_sound_input_container\":\"settings_sound_input_container__CT+Se\",\"settings_sound_volume\":\"settings_sound_volume__63HAU\",\"settings_sound_icon\":\"settings_sound_icon__XPzAb\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\nimport { useCallback } from 'preact/hooks';\r\n\r\nimport { defaultFontSize, stepFontSize, minFontSize, maxFontSize, sampleFontsizeText } from 'src/constants';\r\n\r\nimport { fonts } from 'src/components/theme';\r\n\r\nconst datapointsFontSize = [];\r\nfor (let s=minFontSize; s <= maxFontSize; s+= stepFontSize) {\r\n  datapointsFontSize.push(s);\r\n}\r\n\r\nconst SettingsText = ({ font, fontSize, setFontSize }) => {\r\n  const handleFontSize = useCallback((e) => setFontSize(e.target.value), [ setFontSize ]);\r\n\r\n  return (\r\n    <div class={[style.settings_text, 'atrament-settings-text'].join(' ')}>\r\n      <div class={style.settings_fontsize_container}>\r\n        <div class={style.settings_font_a} style={{'font-size': `${minFontSize}%`}}>A</div>\r\n        <div class={style.settings_fontsize_input_container}>\r\n          <input\r\n            class={style.settings_fontsize_input}\r\n            type=\"range\"\r\n            min={minFontSize}\r\n            max={maxFontSize}\r\n            step={stepFontSize}\r\n            value={fontSize || defaultFontSize}\r\n            onInput={handleFontSize}\r\n            list=\"fontSizes\"\r\n          />\r\n          <datalist id=\"fontSizes\">\r\n            {datapointsFontSize.map((f) => <option value={f}></option>)}\r\n          </datalist>\r\n        </div>\r\n        <div class={style.settings_font_a} style={{'font-size': `${maxFontSize}%`}}>A</div>\r\n      </div>\r\n      <div class={style.settings_font_sample} style={{'font-size': `${fontSize}%`, 'font-family': fonts[font]}}>\r\n        {sampleFontsizeText}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"block__5Kw+w\",\"block_start\":\"block_start__qEaDh\",\"block_end\":\"block_end__ZWY1I\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Block = ({ children, align }) => {\n  const cssStyles = [style.block];\n  if (align === 'start') {\n    cssStyles.push(style.block_start);\n  } else if (align === 'end') {\n    cssStyles.push(style.block_end);\n  }\n  cssStyles.push('atrament-block');\n  return (\n    <div class={cssStyles.join(' ')}>\n      {children}\n    </div>\n  );\n};\n\nexport default Block;\n","// extracted by mini-css-extract-plugin\nexport default {\"choice_button\":\"choice_button__rAvgB\"};","import { h } from 'preact';\nimport style from './index.css';\nimport { useCallback } from 'preact/hooks';\n\nconst ChoiceButton = ({ choice, handleClick }) => {\n  const onClick = useCallback(() => {\n    handleClick(choice.id);\n  }, choice);\n  return (\n    <button class={style.choice_button} onClick={onClick}>{choice.choice}</button>\n  );\n};\n\nexport default ChoiceButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"container_text\":\"container_text__ZXoDQ\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst ContainerText = ({ children, fontSize }) => {  \n  return (\n    <div class={[style.container_text, 'atrament-text-container'].join(' ')} style={{'font-size': `${fontSize}%`}}>\n      {children}\n    </div>\n  );\n};\n\nexport default ContainerText;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header__76MLv\",\"header_align\":\"header_align__UjY+Q\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\n\r\nconst Header = ({ children }) => (\r\n  <div class={[style.header, 'atrament-header'].join(' ')}>\r\n    <div class={style.header_align}>\r\n        {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;","// extracted by mini-css-extract-plugin\nexport default {\"imagebox\":\"imagebox__Km9ky\",\"image\":\"image__Qdgr1\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Image = ({ src }) => (\n  src ?\n    <div class={[style.imagebox, 'atrament-imagebox'].join(' ')}>\n      <img src={src} class={[style.image, 'atrament-picture'].join(' ')} />\n    </div>\n  :\n    ''\n);\n\nexport default Image;","// extracted by mini-css-extract-plugin\nexport default {\"link_menu\":\"link_menu__S6+au\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\n\r\nconst LinkMenu = ({children, key, onClick}) => (\r\n  <div>\r\n    <button key={key} onClick={onClick} class={style.link_menu}>{children}</button>\r\n  </div>\r\n);\r\n\r\nexport default LinkMenu;","import { h } from 'preact';\r\nimport { useCallback } from 'preact/hooks';\r\nimport Toggle from '../toggle';\r\n\r\nconst SettingsAnimation = ({ animation, setAnimation }) => {\r\n  const handleAnimation = useCallback((e) => setAnimation(e.target.checked), [ setAnimation ]);\r\n\r\n  return (\r\n    <div class={['atrament-settings-animation'].join(' ')}>\r\n      <Toggle enabled={animation} onChange={handleAnimation} /> Animations\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsAnimation;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"backdrop__T766e\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\n\r\nconst SettingsBackdrop = ({ onClick }) => (\r\n  <div class={[style.backdrop, 'atrament-settings-backdrop'].join(' ')} onClick={onClick}></div>\r\n);\r\n\r\nexport default SettingsBackdrop;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"close\":\"close__WLi7G\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\n\r\nconst SettingsCloseButton = ({onClick}) => (\r\n  <div class={style.close}>\r\n    <button onClick={onClick} title=\"Close\">&#x2715;</button>\r\n  </div>\r\n);\r\n\r\nexport default SettingsCloseButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"settings\":\"settings__1sOan\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\n\r\nconst SettingsModal = ({ children }) => (\r\n  <div class={[style.settings, 'atrament-settings-modal'].join(' ')}>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default SettingsModal;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_font_container\":\"settings_font_container__DYxBs\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\nimport { useCallback } from 'preact/hooks';\r\n\r\nimport { fonts } from 'src/components/theme';\r\n\r\nconst SettingsFont = ({ font, setFont }) => {\r\n  const handleFont = useCallback((e) => setFont(e.target.value), [ setFont ]);\r\n  return (\r\n    <div class={[style.settings_font_container, 'atrament-settings-font'].join(' ')}>\r\n    <select onChange={handleFont} style={{'font-family': fonts[font]}}>\r\n        {Object.entries(fonts).map(([k, v]) => (\r\n            <option value={k} style={{'font-family': v}} selected={font === k}>{k}</option>\r\n        ))}\r\n    </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsFont;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_fontsize_container\":\"settings_fontsize_container__wP8JL\",\"settings_font_a\":\"settings_font_a__Btx-T\",\"settings_fontsize_input_container\":\"settings_fontsize_input_container__LwIpf\",\"settings_fontsize_input\":\"settings_fontsize_input__kN0NY\",\"settings_font_sample\":\"settings_font_sample__6xeQK\"};","// extracted by mini-css-extract-plugin\nexport default {\"settings_theme_container\":\"settings_theme_container__GNC6s\",\"settings_theme_button\":\"settings_theme_button__GnuVe\"};","import { h } from 'preact';\r\nimport style from './index.css';\r\nimport { useCallback } from 'preact/hooks';\r\n\r\nimport { themes } from 'src/components/theme';\r\n\r\nconst SettingButton = ({themeId, themeConfig, onClick }) =>  {\r\n    const buttonStyle={\r\n        color: themeConfig['--fg-color'],\r\n        'background-color': themeConfig['--bg-color']\r\n    }\r\n    return (<button class={style.settings_theme_button} style={buttonStyle} onClick={onClick} data-theme-id={themeId}>{themeId}</button>);\r\n};\r\n\r\nconst SettingsTheme = ({ setTheme }) => {\r\n  const handleTheme = useCallback((e) => setTheme(e.target.attributes['data-theme-id'].value), [ setTheme ]);\r\n  return (\r\n    <div class={[style.settings_theme_container, 'atrament-settings-theme'].join(' ')}>\r\n        {Object.entries(themes).map(([k, v]) => {\r\n            return <SettingButton themeId={k} themeConfig={v} onClick={handleTheme} />\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsTheme;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"checkbox_wrapper\":\"checkbox_wrapper__-wNzj\",\"checkbox\":\"checkbox__XUrp9\",\"focus-visible\":\"focus-visible__U28+i\"};","import { h } from 'preact';\nimport style from './index.css';\n\nconst Toggle = ({enabled, onChange}) => (\n  <div class={style.checkbox_wrapper}>\n    <input type=\"checkbox\" class={style.checkbox} checked={enabled} onChange={onChange} />\n  </div>\n);\n\nexport default Toggle;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"settings_container\":\"settings_container__GOY-m\",\"settings_toggle\":\"settings_toggle__8pZcW\"};","import { h } from 'preact';\nimport style from './index.css';\nimport { useStore } from '@nanostores/preact';\n\nimport { useCallback, useContext, useEffect, useState } from 'preact/hooks';\n\nimport {\n  SettingsBackdrop,\n  SettingsModal,\n  SettingsCloseButton,\n  SettingsSound,\n  SettingsText,\n  SettingsFont,\n  SettingsTheme,\n  SettingsAnimation\n} from 'src/components/ui';\n\nimport Atrament from 'src/atrament-context';\n\nconst Settings = () => {\n  const atrament = useContext(Atrament);\n  const { settings } = useStore(atrament.store());\n\n  const setAnimation = useCallback((v) => {\n    atrament.settings.set('animation', v);\n    atrament.settings.save();\n  });\n  const setMute = useCallback(() => {\n    atrament.settings.toggle('mute');\n    atrament.settings.save();\n  });\n  const setVolume = useCallback((v) => {\n    atrament.settings.set('volume', v);\n    atrament.settings.save();\n  });\n  const setFontSize = useCallback((v) => {\n    atrament.settings.set('fontSize', v);\n    atrament.settings.save();\n  });\n  const setTheme = useCallback((v) => {\n    atrament.settings.set('theme', v);\n    atrament.settings.save();\n  });\n  const setFont = useCallback((v) => {\n    atrament.settings.set('font', v);\n    atrament.settings.save();\n  });\n    \n  //\n  const [ isOpen, openSettings ] = useState(false);\n  const toggleSettings = useCallback(() => openSettings(!isOpen));\n\n  const escHandler = useCallback((e) => {\n    if (e.key === \"Escape\") {\n      openSettings(false)\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escHandler, false);\n    return () => {\n      document.removeEventListener(\"keydown\", escHandler, false);\n    }\n  }, [ escHandler ]);\n\n  if (isOpen) {\n    return (\n      <div class={style.settings_container}>\n        <SettingsBackdrop onClick={toggleSettings} />\n        <SettingsModal>\n          <SettingsCloseButton onClick={toggleSettings} />\n          <SettingsAnimation animation={settings.animation} setAnimation={setAnimation} />\n          <SettingsSound mute={settings.mute} volume={settings.volume} setMute={setMute} setVolume={setVolume} />\n          <SettingsFont font={settings.font} setFont={setFont} />\n          <SettingsText font={settings.font} fontSize={settings.fontSize} setFontSize={setFontSize} />          \n          <SettingsTheme theme={settings.theme} setTheme={setTheme} />\n          <div style={{width: '100%', 'text-align': \"right\", 'font-size': '0.8rem'}}>atrament {atrament.version}</div>\n        </SettingsModal>\n      </div>\n    );\n  } else {\n    return (\n      <button class={style.settings_toggle} onClick={toggleSettings}>☰</button>\n    );\n  }\n};\n\nexport default Settings;","import { h } from 'preact';\nimport style from './index.css';\nimport { useCallback } from 'preact/hooks';\nimport Toggle from '../toggle';\n\nconst SettingsSound = ({ mute, volume, setMute, setVolume }) => {\n  const handleMute = useCallback((e) => setMute(!e.target.checked), [ setMute ]);\n  const handleVolume = useCallback((e) => setVolume(e.target.value), [ setVolume ]);\n\n  return (\n    <>\n    <div class={[style.settings_sound, 'atrament-settings-sound'].join(' ')}>\n      <Toggle enabled={!mute} onChange={handleMute} /> Sound\n    </div>\n    <div class={style.settings_sound_container}>\n      <div class={style.settings_sound_icon}>&#128265;</div>\n      <div class={style.settings_sound_input_container}>\n        <input\n          class={style.settings_sound_volume}\n          disabled={mute}\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value={volume}\n          onChange={handleVolume}\n        />\n      </div>\n      <div class={style.settings_sound_icon}>&#128266;</div>\n    </div>\n    </>\n  );\n};\n\nexport default SettingsSound;\n","import { useState, useEffect } from 'preact/hooks'\nimport { listenKeys } from 'nanostores'\n\nexport function useStore(store, opts = {}) {\n  let [, forceRender] = useState({})\n  let [valueBeforeEffect] = useState(store.get())\n\n  useEffect(() => {\n    valueBeforeEffect !== store.get() && forceRender({})\n  }, [])\n  \n  useEffect(() => {\n    let batching, timer, unlisten\n    let rerender = () => {\n      if (!batching) {\n        batching = 1\n        timer = setTimeout(() => {\n          batching = undefined\n          forceRender({})\n        })\n      }\n    }\n    if (opts.keys) {\n      unlisten = listenKeys(store, opts.keys, rerender)\n    } else {\n      unlisten = store.listen(rerender)\n    }\n    return () => {\n      unlisten()\n      clearTimeout(timer)\n    }\n  }, [store, '' + opts.keys])\n\n  return store.get()\n}\n","export function listenKeys(store, keys, listener) {\n  let keysSet = new Set([...keys, undefined])\n  return store.listen((value, changed) => {\n    if (keysSet.has(changed)) {\n      listener(value, changed)\n    }\n  })\n}\n"],"sourceRoot":""}